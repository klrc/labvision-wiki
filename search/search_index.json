{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Labvision\u4e2d\u6587\u6587\u6863 Labvision\u662f\u4ee5pytorch\u4e3a\u5185\u6838\u7684\u5b9e\u9a8c\u6027\u5e73\u53f0. git\u6e90\u7801\u8bf7\u79fb\u6b65: https://github.com/klrc/labvision . Labvision\u80fd\u505a\u4ec0\u4e48 Labvision\u96c6\u6210\u4e86\u8bad\u7ec3\u6a21\u578b\u8fc7\u7a0b\u4e2d\u7684\u8fed\u4ee3\u63a7\u5236/\u65e5\u5fd7/\u53ef\u89c6\u5316/\u670d\u52a1\u5668\u90e8\u7f72\u7b49\u73af\u8282, \u867d\u7136\u53ea\u662f\u4e00\u4e2a\u7ec4\u5185\u4f7f\u7528\u7684\u5de5\u5177, \u4f46\u81f3\u5c11\u8fd9\u80fd\u8282\u7ea6\u4e0d\u5c11\u65f6\u95f4. \u7b80\u5316\u5197\u957f\u7684\u8bad\u7ec3\u4ee3\u7801: \u5c06\u670d\u52a1\u5668\u89c6\u4f5c\u8ba1\u7b97\u8d44\u6e90: \u5feb\u901f\u7b2c\u4e09\u65b9\u53ef\u89c6\u5316: \u81ea\u52a8\u6253\u5305\u5f52\u6863, \u89c4\u8303\u5de5\u4f5c\u76ee\u5f55: \u5927\u81f4\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5305. \u65b0\u624b\u4e0a\u8def Quickstart \u81ea\u52a8\u8bad\u7ec3\u6838 \u8fdc\u7a0b\u670d\u52a1\u5668 \u81ea\u52a8\u6574\u7406 Pytorch\u6269\u5c55\u652f\u6301 \u53ef\u89c6\u5316\u6269\u5c55\u652f\u6301 \u793a\u4f8b\u6559\u7a0b \u8fd9\u91cc\u6709\u51e0\u4e2ademo\u9879\u76ee\u4f9b\u53c2\u8003: Hello MNIST \u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u96c6 \u5c06\u6838\u90e8\u7f72\u81f3\u670d\u52a1\u5668 \u4e3a\u6240\u6b32\u4e3a: resnet-18 \u5730\u6bef\u5f0f\u8c03\u53c2 \u5199\u5728\u6700\u540e \u867d\u7136\u662f\u5174\u8da3\u4f7f\u7136, \u4f46\u4f5c\u4e3a\u7ec4\u5185\u5171\u6709\u7684\u8d44\u6e90(\u5783\u573e), \u8fd8\u662f\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u7684. \u6211\u8fdb\u7ec4\u7684\u65f6\u5019, \u9664\u4e86\u88c5\u7740\u5403\u9e21\u5b89\u88c5\u6587\u4ef6\u7684\u79fb\u52a8\u786c\u76d8, \u5e76\u6ca1\u6709\u5565\u503c\u5f97\u7ee7\u627f\u7684, \u7b97\u662f\u6bd4\u8f83\u9057\u61be. \u5e0c\u671b\u4ece\u4eca\u5f80\u540e\u7ec4\u91cc\u6709\u591a\u5c11\u80fd\u591f\u4f20\u4e0b\u53bb\u7684\u4e1c\u897f, \u6b22\u8fce\u4e00\u8d77\u4fee\u57ce\u5899!","title":"\u4ecb\u7ecd"},{"location":"#labvision","text":"Labvision\u662f\u4ee5pytorch\u4e3a\u5185\u6838\u7684\u5b9e\u9a8c\u6027\u5e73\u53f0. git\u6e90\u7801\u8bf7\u79fb\u6b65: https://github.com/klrc/labvision .","title":"Labvision\u4e2d\u6587\u6587\u6863"},{"location":"#labvision_1","text":"Labvision\u96c6\u6210\u4e86\u8bad\u7ec3\u6a21\u578b\u8fc7\u7a0b\u4e2d\u7684\u8fed\u4ee3\u63a7\u5236/\u65e5\u5fd7/\u53ef\u89c6\u5316/\u670d\u52a1\u5668\u90e8\u7f72\u7b49\u73af\u8282, \u867d\u7136\u53ea\u662f\u4e00\u4e2a\u7ec4\u5185\u4f7f\u7528\u7684\u5de5\u5177, \u4f46\u81f3\u5c11\u8fd9\u80fd\u8282\u7ea6\u4e0d\u5c11\u65f6\u95f4. \u7b80\u5316\u5197\u957f\u7684\u8bad\u7ec3\u4ee3\u7801: \u5c06\u670d\u52a1\u5668\u89c6\u4f5c\u8ba1\u7b97\u8d44\u6e90: \u5feb\u901f\u7b2c\u4e09\u65b9\u53ef\u89c6\u5316: \u81ea\u52a8\u6253\u5305\u5f52\u6863, \u89c4\u8303\u5de5\u4f5c\u76ee\u5f55: \u5927\u81f4\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5305.","title":"Labvision\u80fd\u505a\u4ec0\u4e48"},{"location":"#_1","text":"Quickstart \u81ea\u52a8\u8bad\u7ec3\u6838 \u8fdc\u7a0b\u670d\u52a1\u5668 \u81ea\u52a8\u6574\u7406 Pytorch\u6269\u5c55\u652f\u6301 \u53ef\u89c6\u5316\u6269\u5c55\u652f\u6301","title":"\u65b0\u624b\u4e0a\u8def"},{"location":"#_2","text":"\u8fd9\u91cc\u6709\u51e0\u4e2ademo\u9879\u76ee\u4f9b\u53c2\u8003: Hello MNIST \u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u96c6 \u5c06\u6838\u90e8\u7f72\u81f3\u670d\u52a1\u5668 \u4e3a\u6240\u6b32\u4e3a: resnet-18 \u5730\u6bef\u5f0f\u8c03\u53c2","title":"\u793a\u4f8b\u6559\u7a0b"},{"location":"#_3","text":"\u867d\u7136\u662f\u5174\u8da3\u4f7f\u7136, \u4f46\u4f5c\u4e3a\u7ec4\u5185\u5171\u6709\u7684\u8d44\u6e90(\u5783\u573e), \u8fd8\u662f\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u7684. \u6211\u8fdb\u7ec4\u7684\u65f6\u5019, \u9664\u4e86\u88c5\u7740\u5403\u9e21\u5b89\u88c5\u6587\u4ef6\u7684\u79fb\u52a8\u786c\u76d8, \u5e76\u6ca1\u6709\u5565\u503c\u5f97\u7ee7\u627f\u7684, \u7b97\u662f\u6bd4\u8f83\u9057\u61be. \u5e0c\u671b\u4ece\u4eca\u5f80\u540e\u7ec4\u91cc\u6709\u591a\u5c11\u80fd\u591f\u4f20\u4e0b\u53bb\u7684\u4e1c\u897f, \u6b22\u8fce\u4e00\u8d77\u4fee\u57ce\u5899!","title":"\u5199\u5728\u6700\u540e"},{"location":"about/","text":"This a experimental platform for ECUST Computer Vision Research team. Contact 1440698245@qq.com if you have any question.","title":"About"},{"location":"na/","text":"N/A page \u8fd8\u6ca1\u5199, \u809d\u75bc..","title":"\u66f4\u65b0\u65e5\u5fd7"},{"location":"na/#na-page","text":"\u8fd8\u6ca1\u5199, \u809d\u75bc..","title":"N/A page"},{"location":"quickstart/","text":"Quickstart \u4e24\u6b65\u5373\u53ef\u4f7f\u7528labvision. 1. \u5b89\u88c5labvision labvision\u5df2\u6574\u5408\u8fdbpypi\u6e90, \u4f7f\u7528pip\u5b89\u88c5\u5373\u53ef: pip install labvision \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u6e05\u534e\u955c\u50cf\u6e90, \u66f4\u65b0\u4f1a\u6709\u4e00\u5929\u5de6\u53f3\u7684\u5ef6\u8fdf. \u82e5\u6025\u9700\u5f53\u5929\u66f4\u65b0\u7684\u7248\u672c, \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u5373\u53ef: pip install labvision -i https://pypi.org/simple 2. import import labvision \u73b0\u5728, Labvision\u5df2\u7ecf\u53ef\u4ee5\u6295\u5165\u4f7f\u7528\u4e86. \u5982\u679c\u51fa\u73b0\u95ee\u9898, \u8bf4\u660e\u4f5c\u8005\u53c8\u5199\u4e86\u4e00\u5806bug , \u5927\u6982\u7387\u4e0d\u662f\u4f60\u7684\u95ee\u9898. \u8bf7\u5728 repo \u63d0\u4ea4issue, \u8d21\u732e\u4e00\u4efd\u529b\u91cf!","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"\u4e24\u6b65\u5373\u53ef\u4f7f\u7528labvision.","title":"Quickstart"},{"location":"quickstart/#1-labvision","text":"labvision\u5df2\u6574\u5408\u8fdbpypi\u6e90, \u4f7f\u7528pip\u5b89\u88c5\u5373\u53ef: pip install labvision \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u6e05\u534e\u955c\u50cf\u6e90, \u66f4\u65b0\u4f1a\u6709\u4e00\u5929\u5de6\u53f3\u7684\u5ef6\u8fdf. \u82e5\u6025\u9700\u5f53\u5929\u66f4\u65b0\u7684\u7248\u672c, \u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u5373\u53ef: pip install labvision -i https://pypi.org/simple","title":"1. \u5b89\u88c5labvision"},{"location":"quickstart/#2-import","text":"import labvision \u73b0\u5728, Labvision\u5df2\u7ecf\u53ef\u4ee5\u6295\u5165\u4f7f\u7528\u4e86. \u5982\u679c\u51fa\u73b0\u95ee\u9898, \u8bf4\u660e\u4f5c\u8005\u53c8\u5199\u4e86\u4e00\u5806bug , \u5927\u6982\u7387\u4e0d\u662f\u4f60\u7684\u95ee\u9898. \u8bf7\u5728 repo \u63d0\u4ea4issue, \u8d21\u732e\u4e00\u4efd\u529b\u91cf!","title":"2. import"},{"location":"tutorial_autocore/","text":"\u81ea\u52a8\u8bad\u7ec3\u6838 \u81ea\u52a8\u6838 \u662flabvision\u4e2d\u6267\u884c\u8bad\u7ec3\u6d4b\u8bd5\u7684\u57fa\u672c\u5143\u7d20, \u4e00\u4e2a\u6838\u63a7\u5236\u4e00\u4e2a\u6a21\u578b\u4ee5\u53ca\u6240\u6709\u56f4\u7ed5\u8be5\u6a21\u578b\u7684\u53c2\u6570/\u6570\u636e\u96c6/\u8f93\u51fa/\u8fd0\u884c\u7b49\u4fe1\u606f. \u521d\u59cb\u5316\u5b9a\u4e49 \u53ea\u9700\u8981\u8bbe\u5b9a\u4e00\u4e9b\u5fc5\u8981\u7684\u53c2\u6570, \u4f60\u5c31\u53ef\u4ee5\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u6838. from labvision import auto, datasets core = auto.Core('build/test-project') core.model = resnet50() core.set_datasets(datasets.FI, root='build/FI') core = core.compile() \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528: core = auto.Slave(core) \u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u6838 (\u53ef\u4ee5\u7528\u6765\u6267\u884c\u5e76\u884c\u8ba1\u7b97\u6216\u5730\u6bef\u5f0f\u8c03\u53c2). core \u53ef\u4ee5\u5b9a\u4e49\u5f88\u591a\u4e1c\u897f, \u8bf7\u53c2\u8003: labvision.auto.Core \"\u6211\u7528\u4e00\u5f20\u81ea\u52a8\u6838\u4f5c\u4e3a\u796d\u54c1, \u53ec\u5524\u5b9e\u4f8b\u81ea\u52a8\u6838 !\" \u5feb\u901f\u5b9a\u4e49\u6570\u636e\u96c6 labvision.auto\u63d0\u4f9b\u4e86\u4e00\u79cd\u5feb\u901f\u5b9a\u4e49\u6570\u636e\u96c6\u7684\u65b9\u5f0f, (\u56e0\u4e3a\u8bad\u7ec3/\u6d4b\u8bd5/\u9a8c\u8bc1\u5e38\u5e38\u6765\u81ea\u540c\u4e00\u4e2a\u6570\u636e\u96c6), \u4f60\u53ea\u9700\u8981\u50cf\u4e0a\u8ff0\u4ee3\u7801\u4e00\u6837, \u6307\u5b9a\u6570\u636e\u96c6\u7684\u7c7b\u548c\u4e00\u4e9b\u53c2\u6570, \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u6216\u5206\u522b\u6dfb\u52a0\u53c2\u6570. \u4f60\u4e5f\u53ef\u4ee5\u5206\u522b\u5b9a\u4e49\u8bad\u7ec3\u96c6, \u9a8c\u8bc1\u96c6, \u6d4b\u8bd5\u96c6: core.trainset = MNIST(root='./MNIST', transform=transform, train=True) core.valset = MNIST(root='./MNIST', transform=transform, train=False) ... \u8bbe\u7f6e\u4efb\u610f\u5c5e\u6027 \u81ea\u52a8\u6838\u652f\u6301\u4e00\u5207\u5c5e\u6027, \u4f7f\u7528 core.push('your attribute name', a) \u4e3a\u81ea\u52a8\u6838\u6dfb\u52a0\u5c5e\u6027. \u5f53\u7136, \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 core.your_attribute = a \u8bbe\u7f6e\u5c5e\u6027, \u8fd9\u4e9b\u5c5e\u6027\u968f\u65f6\u53ef\u4ee5\u8bbf\u95ee\u6216\u4fee\u6539. \u9ad8\u7ea7\u53c2\u6570 \u81ea\u52a8\u6838\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b9a\u4e49\u53c2\u6570\u7684\u65b9\u5f0f, core.trainset = torchvision.datasets.MNIST(root='./MNIST', train=True) # \u6b63\u5e38\u53c2\u6570 core.trainset = torchvision.datasets.MNIST # \u5e72\u71e5\u53c2\u6570 core.trainset.root = '/MNIST' core.trainset.train = True \u5e72\u71e5\u53c2\u6570(Dry Args)\u662f\u4e00\u4e2a\u86ee\u597d\u73a9\u7684\u5b9e\u9a8c\u6027\u529f\u80fd, \u5b83\u53ef\u4ee5\u8ba9\u4f60\u521b\u5efa\u7c7b\u7684\u65f6\u5019\u4e0d\u7528\u7acb\u5373\u6307\u5b9a\u53c2\u6570, \u54ea\u6015\u662f\u5fc5\u8981\u53c2\u6570. \u81ea\u52a8\u6838\u4e2d\u7684 core.model , core.optimizer , core.trainset , core.testset , core.valset , core.push() \u90fd\u5b9e\u88c5\u4e86\u5bf9\u5e72\u71e5\u53c2\u6570\u7684\u652f\u6301, \u4f60\u53ea\u9700\u8981\u50cf\u4e0a\u9762\u7684\u4ee3\u7801\u90a3\u6837\u5b9a\u4e49\u5373\u53ef. \u5982\u679c\u4f60\u60f3\u5728\u522b\u7684\u5730\u65b9\u4f7f\u7528, \u5e72\u71e5\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7 my_dryarg = auto.Dry.Args(your_class) \u521b\u5efa. \u53ea\u9700\u8981\u5728\u771f\u6b63\u4f7f\u7528\u7684\u65f6\u5019\u8c03\u7528 my_dryarg = my_dryarg.compile() , \u5b83\u5c31\u4f1a\u548c\u6b63\u5e38\u53c2\u6570\u4e00\u6837\u8fd0\u4f5c. \u6b64\u5916, \u5e72\u71e5\u53c2\u6570\u53ef\u4ee5\u5957\u5a03. \u4f7f\u7528\u81ea\u52a8\u6838\u8bad\u7ec3 \u7f16\u8bd1\u5b8c\u6210\u540e, \u4f7f\u7528\u81ea\u52a8\u6838\u8bad\u7ec3\u975e\u5e38\u7b80\u5355, \u4f60\u53ea\u9700\u8981: for _ in core.steps(max_epoch=30): if core.epoch_finished(): acc = core.eval('acc') if core.epoch > 10: torch.save(core.model.state_dict(),'build/final_model.pt') break \u8fd9\u5c31\u662f\u5168\u90e8\u7684\u4ee3\u7801\u4e86. \u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570 labvision.auto\u9ed8\u8ba4\u88c5\u8f7d\u4e86cross_entropy\u635f\u5931\u51fd\u6570, \u4f60\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u51fd\u6570: def kldiv_loss(logits, y): return torch.nn.functional.kldiv(logits, y) core.loss_function = kldiv_loss \u5176\u4e2d, logits\u4e3a\u6a21\u578b\u8f93\u51fa, y\u4e3aground truth. \u81ea\u5b9a\u4e49\u8bfb\u53d6\u8bad\u7ec3\u96c6(\u6d4b\u8bd5\u96c6)\u6570\u636e \u540c\u6837\u5730, \u4f60\u53ef\u4ee5\u8986\u76d6 auto.read_batch() \u51fd\u6570: def custom_read(sample): x, (y1, y2) = sample return Variable(x).cuda(), Variable(y1).cuda() core.read_batch = custom_read \u6dfb\u52a0\u8bc4\u4f30\u6307\u6807 labvision.auto\u9ed8\u8ba4\u88c5\u8f7d\u4e86accuracy, \u5e76\u5728\u4e0d\u65ad\u63d0\u4f9b\u66f4\u591a\u7684\u652f\u6301(\u5982\u679c\u6211\u7528\u5230\u4e86\u7684\u8bdd), \u4e00\u4e9b\u6307\u6807\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u540d\u5b57\u6307\u5b9a: core.eval('acc') core.eval('acc@top3') ... \u5177\u4f53\u8bf7\u79fb\u6b65 labvision.auto.Core , \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u81ea\u5df1\u7684\u8bc4\u4f30\u6307\u6807: core.metrics_hook('BLEU@1', your_function) \u81ea\u5b9a\u4e49\u8bad\u7ec3\u95f4\u9694 \u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u8bad\u7ec3checkpoint\u7684\u95f4\u9694 (\u5982\u9700\u8981\u53d8\u957f\u7684interval), \u4f60\u53ef\u4ee5\u4f7f\u7528\u5355\u6b65\u6a21\u5f0f-- core.step() \u6765\u5b8c\u6210\u4efb\u4f55\u5947\u602a\u7684\u8981\u6c42: for x in [1,1,4,5,1,4]: # \u6307\u5b9ainterval core.step(iters=x) print(core.status) \u5b8c\u6574\u793a\u4f8b \"\u4e0d\u5b58\u5728\u7684, \u6211\u5b9e\u9a8c\u90fd\u6765\u4e0d\u53ca\u505a\u4e86\" \u63a2\u7d22\u66f4\u591a\u7684\u53ef\u80fd labvision\u5e76\u4e0d\u662f\u7528\u6765\u4ee3\u66ff\u4f60\u7814\u7a76\u8005\u8eab\u4efd\u7684, \u6211\u4eec\u9f13\u52b1\u4f60\u5728\u6b64\u57fa\u7840\u4e0a\u6dfb\u52a0\u5408\u9002\u7684\u7b97\u6cd5, \u867d\u7136\u8fd9\u4e9b\u7b97\u6cd5\u9700\u8981\u4f60\u624b\u52a8\u5b9e\u73b0, \u4f46\u5728\u81ea\u52a8\u6838\u7684\u57fa\u7840\u4e0a, \u8fd9\u5e76\u4e0d\u4f1a\u5f88\u56f0\u96be. \u4f8b1: \u5728\u81ea\u52a8\u6838\u8bad\u7ec3\u4e2d\u52a0\u5165early stop\u7b56\u7565 best_acc = 0 patience = 5 for _ in core.steps(max_epoch=30): if core.epoch_finished(): acc = core.eval('acc') if acc > best_acc: best_acc = acc torch.save(core.model.state_dict(),'build/best_model.pt') patience = 5 else: patience -=1 if patience == 0: break \u4f8b2: \u4ea4\u66ff\u8bad\u7ec3\u540c\u4e00\u4e2a(\u6216\u4e0d\u540c)\u7f51\u7edc turn = ['backbone', 'head'] core1.model = core2.model = any_model() while True: core1.step(iters=2000) core2.step(iters=1000) if core1.epoch + core2.epoch > 100: break","title":"\u81ea\u52a8\u8bad\u7ec3\u6838"},{"location":"tutorial_autocore/#_1","text":"\u81ea\u52a8\u6838 \u662flabvision\u4e2d\u6267\u884c\u8bad\u7ec3\u6d4b\u8bd5\u7684\u57fa\u672c\u5143\u7d20, \u4e00\u4e2a\u6838\u63a7\u5236\u4e00\u4e2a\u6a21\u578b\u4ee5\u53ca\u6240\u6709\u56f4\u7ed5\u8be5\u6a21\u578b\u7684\u53c2\u6570/\u6570\u636e\u96c6/\u8f93\u51fa/\u8fd0\u884c\u7b49\u4fe1\u606f.","title":"\u81ea\u52a8\u8bad\u7ec3\u6838"},{"location":"tutorial_autocore/#_2","text":"\u53ea\u9700\u8981\u8bbe\u5b9a\u4e00\u4e9b\u5fc5\u8981\u7684\u53c2\u6570, \u4f60\u5c31\u53ef\u4ee5\u7f16\u8bd1\u751f\u6210\u4e00\u4e2a\u6838. from labvision import auto, datasets core = auto.Core('build/test-project') core.model = resnet50() core.set_datasets(datasets.FI, root='build/FI') core = core.compile() \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528: core = auto.Slave(core) \u6765\u521b\u5efa\u81ea\u5b9a\u4e49\u7684\u6838 (\u53ef\u4ee5\u7528\u6765\u6267\u884c\u5e76\u884c\u8ba1\u7b97\u6216\u5730\u6bef\u5f0f\u8c03\u53c2). core \u53ef\u4ee5\u5b9a\u4e49\u5f88\u591a\u4e1c\u897f, \u8bf7\u53c2\u8003: labvision.auto.Core \"\u6211\u7528\u4e00\u5f20\u81ea\u52a8\u6838\u4f5c\u4e3a\u796d\u54c1, \u53ec\u5524\u5b9e\u4f8b\u81ea\u52a8\u6838 !\"","title":"\u521d\u59cb\u5316\u5b9a\u4e49"},{"location":"tutorial_autocore/#_3","text":"labvision.auto\u63d0\u4f9b\u4e86\u4e00\u79cd\u5feb\u901f\u5b9a\u4e49\u6570\u636e\u96c6\u7684\u65b9\u5f0f, (\u56e0\u4e3a\u8bad\u7ec3/\u6d4b\u8bd5/\u9a8c\u8bc1\u5e38\u5e38\u6765\u81ea\u540c\u4e00\u4e2a\u6570\u636e\u96c6), \u4f60\u53ea\u9700\u8981\u50cf\u4e0a\u8ff0\u4ee3\u7801\u4e00\u6837, \u6307\u5b9a\u6570\u636e\u96c6\u7684\u7c7b\u548c\u4e00\u4e9b\u53c2\u6570, \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u6216\u5206\u522b\u6dfb\u52a0\u53c2\u6570. \u4f60\u4e5f\u53ef\u4ee5\u5206\u522b\u5b9a\u4e49\u8bad\u7ec3\u96c6, \u9a8c\u8bc1\u96c6, \u6d4b\u8bd5\u96c6: core.trainset = MNIST(root='./MNIST', transform=transform, train=True) core.valset = MNIST(root='./MNIST', transform=transform, train=False) ...","title":"\u5feb\u901f\u5b9a\u4e49\u6570\u636e\u96c6"},{"location":"tutorial_autocore/#_4","text":"\u81ea\u52a8\u6838\u652f\u6301\u4e00\u5207\u5c5e\u6027, \u4f7f\u7528 core.push('your attribute name', a) \u4e3a\u81ea\u52a8\u6838\u6dfb\u52a0\u5c5e\u6027. \u5f53\u7136, \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 core.your_attribute = a \u8bbe\u7f6e\u5c5e\u6027, \u8fd9\u4e9b\u5c5e\u6027\u968f\u65f6\u53ef\u4ee5\u8bbf\u95ee\u6216\u4fee\u6539.","title":"\u8bbe\u7f6e\u4efb\u610f\u5c5e\u6027"},{"location":"tutorial_autocore/#_5","text":"\u81ea\u52a8\u6838\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b9a\u4e49\u53c2\u6570\u7684\u65b9\u5f0f, core.trainset = torchvision.datasets.MNIST(root='./MNIST', train=True) # \u6b63\u5e38\u53c2\u6570 core.trainset = torchvision.datasets.MNIST # \u5e72\u71e5\u53c2\u6570 core.trainset.root = '/MNIST' core.trainset.train = True \u5e72\u71e5\u53c2\u6570(Dry Args)\u662f\u4e00\u4e2a\u86ee\u597d\u73a9\u7684\u5b9e\u9a8c\u6027\u529f\u80fd, \u5b83\u53ef\u4ee5\u8ba9\u4f60\u521b\u5efa\u7c7b\u7684\u65f6\u5019\u4e0d\u7528\u7acb\u5373\u6307\u5b9a\u53c2\u6570, \u54ea\u6015\u662f\u5fc5\u8981\u53c2\u6570. \u81ea\u52a8\u6838\u4e2d\u7684 core.model , core.optimizer , core.trainset , core.testset , core.valset , core.push() \u90fd\u5b9e\u88c5\u4e86\u5bf9\u5e72\u71e5\u53c2\u6570\u7684\u652f\u6301, \u4f60\u53ea\u9700\u8981\u50cf\u4e0a\u9762\u7684\u4ee3\u7801\u90a3\u6837\u5b9a\u4e49\u5373\u53ef. \u5982\u679c\u4f60\u60f3\u5728\u522b\u7684\u5730\u65b9\u4f7f\u7528, \u5e72\u71e5\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7 my_dryarg = auto.Dry.Args(your_class) \u521b\u5efa. \u53ea\u9700\u8981\u5728\u771f\u6b63\u4f7f\u7528\u7684\u65f6\u5019\u8c03\u7528 my_dryarg = my_dryarg.compile() , \u5b83\u5c31\u4f1a\u548c\u6b63\u5e38\u53c2\u6570\u4e00\u6837\u8fd0\u4f5c. \u6b64\u5916, \u5e72\u71e5\u53c2\u6570\u53ef\u4ee5\u5957\u5a03.","title":"\u9ad8\u7ea7\u53c2\u6570"},{"location":"tutorial_autocore/#_6","text":"\u7f16\u8bd1\u5b8c\u6210\u540e, \u4f7f\u7528\u81ea\u52a8\u6838\u8bad\u7ec3\u975e\u5e38\u7b80\u5355, \u4f60\u53ea\u9700\u8981: for _ in core.steps(max_epoch=30): if core.epoch_finished(): acc = core.eval('acc') if core.epoch > 10: torch.save(core.model.state_dict(),'build/final_model.pt') break \u8fd9\u5c31\u662f\u5168\u90e8\u7684\u4ee3\u7801\u4e86.","title":"\u4f7f\u7528\u81ea\u52a8\u6838\u8bad\u7ec3"},{"location":"tutorial_autocore/#_7","text":"labvision.auto\u9ed8\u8ba4\u88c5\u8f7d\u4e86cross_entropy\u635f\u5931\u51fd\u6570, \u4f60\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u51fd\u6570: def kldiv_loss(logits, y): return torch.nn.functional.kldiv(logits, y) core.loss_function = kldiv_loss \u5176\u4e2d, logits\u4e3a\u6a21\u578b\u8f93\u51fa, y\u4e3aground truth.","title":"\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570"},{"location":"tutorial_autocore/#_8","text":"\u540c\u6837\u5730, \u4f60\u53ef\u4ee5\u8986\u76d6 auto.read_batch() \u51fd\u6570: def custom_read(sample): x, (y1, y2) = sample return Variable(x).cuda(), Variable(y1).cuda() core.read_batch = custom_read","title":"\u81ea\u5b9a\u4e49\u8bfb\u53d6\u8bad\u7ec3\u96c6(\u6d4b\u8bd5\u96c6)\u6570\u636e"},{"location":"tutorial_autocore/#_9","text":"labvision.auto\u9ed8\u8ba4\u88c5\u8f7d\u4e86accuracy, \u5e76\u5728\u4e0d\u65ad\u63d0\u4f9b\u66f4\u591a\u7684\u652f\u6301(\u5982\u679c\u6211\u7528\u5230\u4e86\u7684\u8bdd), \u4e00\u4e9b\u6307\u6807\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u540d\u5b57\u6307\u5b9a: core.eval('acc') core.eval('acc@top3') ... \u5177\u4f53\u8bf7\u79fb\u6b65 labvision.auto.Core , \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u81ea\u5df1\u7684\u8bc4\u4f30\u6307\u6807: core.metrics_hook('BLEU@1', your_function)","title":"\u6dfb\u52a0\u8bc4\u4f30\u6307\u6807"},{"location":"tutorial_autocore/#_10","text":"\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u8bad\u7ec3checkpoint\u7684\u95f4\u9694 (\u5982\u9700\u8981\u53d8\u957f\u7684interval), \u4f60\u53ef\u4ee5\u4f7f\u7528\u5355\u6b65\u6a21\u5f0f-- core.step() \u6765\u5b8c\u6210\u4efb\u4f55\u5947\u602a\u7684\u8981\u6c42: for x in [1,1,4,5,1,4]: # \u6307\u5b9ainterval core.step(iters=x) print(core.status)","title":"\u81ea\u5b9a\u4e49\u8bad\u7ec3\u95f4\u9694"},{"location":"tutorial_autocore/#_11","text":"\"\u4e0d\u5b58\u5728\u7684, \u6211\u5b9e\u9a8c\u90fd\u6765\u4e0d\u53ca\u505a\u4e86\"","title":"\u5b8c\u6574\u793a\u4f8b"},{"location":"tutorial_autocore/#_12","text":"labvision\u5e76\u4e0d\u662f\u7528\u6765\u4ee3\u66ff\u4f60\u7814\u7a76\u8005\u8eab\u4efd\u7684, \u6211\u4eec\u9f13\u52b1\u4f60\u5728\u6b64\u57fa\u7840\u4e0a\u6dfb\u52a0\u5408\u9002\u7684\u7b97\u6cd5, \u867d\u7136\u8fd9\u4e9b\u7b97\u6cd5\u9700\u8981\u4f60\u624b\u52a8\u5b9e\u73b0, \u4f46\u5728\u81ea\u52a8\u6838\u7684\u57fa\u7840\u4e0a, \u8fd9\u5e76\u4e0d\u4f1a\u5f88\u56f0\u96be.","title":"\u63a2\u7d22\u66f4\u591a\u7684\u53ef\u80fd"},{"location":"tutorial_autocore/#1-early-stop","text":"best_acc = 0 patience = 5 for _ in core.steps(max_epoch=30): if core.epoch_finished(): acc = core.eval('acc') if acc > best_acc: best_acc = acc torch.save(core.model.state_dict(),'build/best_model.pt') patience = 5 else: patience -=1 if patience == 0: break","title":"\u4f8b1: \u5728\u81ea\u52a8\u6838\u8bad\u7ec3\u4e2d\u52a0\u5165early stop\u7b56\u7565"},{"location":"tutorial_autocore/#2","text":"turn = ['backbone', 'head'] core1.model = core2.model = any_model() while True: core1.step(iters=2000) core2.step(iters=1000) if core1.epoch + core2.epoch > 100: break","title":"\u4f8b2: \u4ea4\u66ff\u8bad\u7ec3\u540c\u4e00\u4e2a(\u6216\u4e0d\u540c)\u7f51\u7edc"},{"location":"tutorial_clean/","text":"\u81ea\u52a8\u6574\u7406 (\u672a\u5b9e\u88c5) (\u4ec5\u9650\u81ea\u52a8\u6838\u6216\u6587\u4ef6\u540d\u81ea\u5e26hash\u7684\u60c5\u51b5) \u5982\u679c\u6267\u884c\u4e86\u5f88\u591a\u7ec4\u5b9e\u9a8c, \u6bcf\u4e2a\u5b9e\u9a8c\u53c8\u6709\u5947\u5947\u602a\u602a\u7684\u8bbe\u5b9a, \u53c8\u6216\u8005\u8bf4\u4f60\u7684\u6bcf\u4e2a\u5b9e\u9a8c\u90fd\u8f93\u51fa\u4e86\u4e00\u5927\u5806\u5468\u8fb9\u7ed3\u679c. \u90a3\u4e48\u4f60\u53ef\u4ee5: labvision.clean('build/my-project') clean() \u4f1a\u5c06\u5f53\u524d\u6307\u5b9aproject\u4e0b\u7684\u6240\u6709\u8f93\u51fa\u6587\u4ef6\u6309hash\u6253\u5305.","title":"\u81ea\u52a8\u6574\u7406"},{"location":"tutorial_clean/#_1","text":"(\u4ec5\u9650\u81ea\u52a8\u6838\u6216\u6587\u4ef6\u540d\u81ea\u5e26hash\u7684\u60c5\u51b5) \u5982\u679c\u6267\u884c\u4e86\u5f88\u591a\u7ec4\u5b9e\u9a8c, \u6bcf\u4e2a\u5b9e\u9a8c\u53c8\u6709\u5947\u5947\u602a\u602a\u7684\u8bbe\u5b9a, \u53c8\u6216\u8005\u8bf4\u4f60\u7684\u6bcf\u4e2a\u5b9e\u9a8c\u90fd\u8f93\u51fa\u4e86\u4e00\u5927\u5806\u5468\u8fb9\u7ed3\u679c. \u90a3\u4e48\u4f60\u53ef\u4ee5: labvision.clean('build/my-project') clean() \u4f1a\u5c06\u5f53\u524d\u6307\u5b9aproject\u4e0b\u7684\u6240\u6709\u8f93\u51fa\u6587\u4ef6\u6309hash\u6253\u5305.","title":"\u81ea\u52a8\u6574\u7406 (\u672a\u5b9e\u88c5)"},{"location":"tutorial_server/","text":"\u8fdc\u7a0b\u670d\u52a1\u5668 \u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u8fdc\u7aef\u7684GPU\u8bad\u7ec3\u6a21\u578b, labvision\u63d0\u4f9b\u4e86\u4e00\u4e9b\u914d\u5957\u7684\u652f\u6301. \u8fde\u63a5\u670d\u52a1\u5668 \u76ee\u524d\u53ea\u63d0\u4f9b\u4e86ssh\u8fde\u63a5, from labvision import dock server = dock.Server(ip='172.20.46.235', user='username', password='password', remote_root='/home/sh/Desktop/Research/test-convlstm') \u8fdc\u7a0b\u6267\u884c\u547d\u4ee4 \u82e5\u6709\u9700\u8981, \u76ee\u524d\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u8fdc\u7a0b\u547d\u4ee4. \u4ea4\u4e92\u5f0f: (\u548cssh\u65e0\u5f02) server.ssh() # \u6267\u884c\u540e\u4f1a\u751f\u6210ssh\u7ec8\u7aef, \u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u547d\u4ee4 ! \u4ea4\u4e92\u5f0f\u529f\u80fd\u76ee\u524d\u672a\u5b9e\u88c5 \u5185\u5d4c\u4ee3\u7801: (\u9002\u5408\u5728python\u811a\u672c\u4e2d\u914d\u5408\u4f7f\u7528) _ = server('cd home/sh/Desktop/Research') stdout, stderr = server('tail -n 50 __cache__/log.yaml') print(stdout[-10:0]) _ = server('rm -r __cache__') \u5c06\u4ee3\u7801\u90e8\u7f72\u81f3\u670d\u52a1\u5668 (\u57fa\u4e8esftp\u548cnohup\u540e\u53f0\u6267\u884c/\u91cd\u5b9a\u5411) \u68c0\u67e5\u4f60\u7684\u4ee3\u7801 \u770b\u4e00\u4e0b\u6240\u6709\u4f9d\u8d56(pip/conda\u5b89\u88c5\u7684\u5305\u4e0d\u7b97)\u662f\u4e0d\u662f\u90fd\u5728\u76ee\u6807\u76ee\u5f55\u5185(\u7b49\u4e0b\u6253\u7b97\u90e8\u7f72\u7684\u6587\u4ef6\u5939). \u76ee\u6807\u76ee\u5f55\u5185\u662f\u5426\u6709\u8d85\u5927\u6587\u4ef6. \u5176\u5b9e\u5982\u679c\u5fc5\u8981\u7684\u8bdd, \u8d85\u5927\u6587\u4ef6\u4e5f\u662f\u53ef\u4ee5\u4e00\u8d77\u4e0a\u4f20\u7684, \u4eb2\u6d4b2GB\u6587\u4ef6\u6821\u56ed\u7f51vpn\u6761\u4ef6\u4e0b\u6ca1\u6709\u95ee\u9898. \u63a8\u9001\u81f3\u670d\u52a1\u5668 \u5c06\u6240\u6709\u6e90\u7801\u90fd\u653e\u7f6e\u5728\u76ee\u6807\u76ee\u5f55, \u6307\u5b9a\u76ee\u6807\u76ee\u5f55\u548c\u542f\u52a8python\u811a\u672c, \u4ee3\u7801\u4f1a\u81ea\u52a8\u8fd0\u884c: with server: server.deploy(src='test-convlstm-cmpl', run='run.py', conda_env='dl') \"\u5e26\u4e0a\u6700\u4f4e\u9650\u5ea6\u7684\u751f\u6d3b\u7528\u54c1, \u51c6\u5907\u63a5\u53d7\u6c38\u65e0\u6b62\u5883\u7684\u52b3\u52a8\u6539\u9020. \" \u81ea\u52a8\u91cd\u542f\u8bad\u7ec3(\u672a\u5b9e\u88c5) \u5982\u679c\u4f60\u7684\u811a\u672c\u652f\u6301\u4e2d\u65ad/\u91cd\u542f, \u6216\u8005\u4f60\u4f7f\u7528\u7684\u662flabvision\u7684\u81ea\u52a8\u6838, \u90a3\u4e48labvision\u8fd8\u53ef\u4ee5\u751f\u6210\u534f\u7a0b\u4ee5\u5168\u5929\u5019\u76d1\u63a7\u670d\u52a1\u5668, \u5728\u8d44\u6e90\u7a7a\u95f2\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u8bad\u7ec3. \u8be6\u60c5\u8bf7\u79fb\u6b65: labvision.server.spring_mode \u53d6\u56de\u8fd0\u884c\u7ed3\u679c (\u672a\u5b9e\u88c5) \u6240\u6709\u7684\u8fd0\u884c\u7ed3\u679c\u53ca\u7cfb\u7edf\u65e5\u5fd7\u90fd\u4f1a\u4fdd\u5b58\u5728\u4f60\u7684\u76ee\u6807\u6587\u4ef6\u5939\u4e0b (\"target_dir/my-project/xxx.log\"), \u901a\u5e38\u5730, \u6211\u4eec\u63a8\u8350\u76f4\u63a5\u53d6\u56de\u6574\u4e2a\u8fd0\u884c\u5b8c\u6bd5\u7684\u5305: server.pop(project='home/sh/my-project',local_dir='my-packages') \u8fd9\u6837, \u8fd9\u4e2a\u5305\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u88ab\u91cd\u65b0push, \u6216\u8005\u5728\u4f60\u7684\u672c\u673a\u7ee7\u7eed\u8fd0\u884c, \u4efb\u4f55\u65e5\u5fd7\u5386\u53f2\u90fd\u4e0d\u4f1a\u88ab\u4e2d\u65ad. \u5982\u679c\u4f60\u60f3\u8981\u53ea\u83b7\u53d6\u67d0\u4e9b\u6587\u4ef6(\u6bd4\u5982\u8bad\u7ec3\u597d\u7684\u6743\u91cd), server.fetch('home/sh/my-project/best_epoch.pt',local_dir='builds') fetch() \u5c06\u4e0d\u4f1a\u6e05\u7406\u670d\u52a1\u5668\u4e2d\u7684\u5bf9\u5e94\u6587\u4ef6, \u4f60\u4e5f\u53ef\u4ee5\u7528\u6765\u5728\u4e0d\u5220\u9664\u5305\u7684\u524d\u63d0\u4e0b\u53d6\u56de\u5305 \"\u6211\u7ec8\u4e8e\u81ea\u7531\u4e86!\" \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528vscode-remote vscode\u5929\u4e0b\u7b2c\u4e00, \u90a3\u4e48\u8fd9\u4e2a\u5305\u548cvscode-remote\u6709\u4f55\u5f02\u540c? \u7f51\u7edc\u5de8\u7a33/24\u5c0f\u65f6\u6821\u56ed\u7f51\u5728\u7ebf \u5982\u679c\u4f60\u7684\u7f51\u7edc\u5341\u5206\u7a33\u5b9a, \u6216\u8005\u4f60\u53ea\u662f\u5728\u670d\u52a1\u5668\u4e0a\u8c03\u8bd5\u51e0\u5206\u949f\u4ee3\u7801, \u90a3\u4e48\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u5305, vscode-remote\u662f\u6700\u597d\u7684\u9009\u62e9. \u4f46\u5982\u679c\u4f60\u7684\u7f51\u7edc\u4e24\u5c0f\u65f6\u5c31\u4f1a\u6302\u6389, \u6216\u8005\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u8dd1\u4e0a\u4e00\u6574\u5929, \u4f7f\u7528labvision.server\u90e8\u7f72\u5c06\u66f4\u4e3a\u65b9\u4fbf. (\u56e0\u4e3alabvision\u5c31\u662f\u4e3a\u8fd9\u79cd\u60c5\u51b5\u51c6\u5907\u7684) labvision.server\u548c\u670d\u52a1\u5668\u7684\u7f51\u7edc\u4ea4\u4e92\u9762\u79ef\u975e\u5e38\u5c0f, \u4ec5\u5728\u5fc5\u8981\u8fde\u63a5\u7684\u65f6\u5019\u901a\u8fc7ssh\u77ed\u6682\u8fde\u63a5, \u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u4f3cvscode\u56e0\u4e3a\u7f51\u7edc\u65ad\u5f00\u800c\u5361\u6b7b\u7684\u60c5\u51b5. \u4e14\u6240\u6709\u90e8\u7f72\u7684\u4ee3\u7801\u90fd\u5728\u540e\u53f0\u6267\u884c, \u8f93\u51fa\u6d41\u88ab\u91cd\u5b9a\u5411\u5230\u65e5\u5fd7\u6587\u4ef6, \u4e0d\u9700\u8981\u7ec8\u7aef\u6301\u7eed\u8fde\u63a5, \u4f60\u53ef\u4ee5\u90e8\u7f72\u5b8c\u5c31\u76d6\u4e0a\u7535\u8111\u8d70\u4eba. \u6211\u6ca1\u6709gpu \u5982\u679c\u4f60\u7684\u672c\u673a\u6ca1\u6709gpu, \u53c8\u78b0\u5de7\u9700\u8981\u8c03\u8bd5, \u90a3\u4e48\u8bf7\u4f7f\u7528vscode-remote, labvision\u5e76\u4e0d\u5177\u5907\u8fdc\u7a0b\u8c03\u8bd5\u7684\u529f\u80fd. \u4e0d\u8fc7\u4f60\u4e5f\u53ef\u4ee5\u5148\u7528cpu\u8c03\u8bd5, \u6539\u6210gpu\u6a21\u5f0f\u540e\u518d\u90e8\u7f72, \u901a\u5e38\u4e0d\u4f1a\u6709\u592a\u591abug.","title":"\u8fdc\u7a0b\u670d\u52a1\u5668"},{"location":"tutorial_server/#_1","text":"\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u8fdc\u7aef\u7684GPU\u8bad\u7ec3\u6a21\u578b, labvision\u63d0\u4f9b\u4e86\u4e00\u4e9b\u914d\u5957\u7684\u652f\u6301.","title":"\u8fdc\u7a0b\u670d\u52a1\u5668"},{"location":"tutorial_server/#_2","text":"\u76ee\u524d\u53ea\u63d0\u4f9b\u4e86ssh\u8fde\u63a5, from labvision import dock server = dock.Server(ip='172.20.46.235', user='username', password='password', remote_root='/home/sh/Desktop/Research/test-convlstm')","title":"\u8fde\u63a5\u670d\u52a1\u5668"},{"location":"tutorial_server/#_3","text":"\u82e5\u6709\u9700\u8981, \u76ee\u524d\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u8fdc\u7a0b\u547d\u4ee4. \u4ea4\u4e92\u5f0f: (\u548cssh\u65e0\u5f02) server.ssh() # \u6267\u884c\u540e\u4f1a\u751f\u6210ssh\u7ec8\u7aef, \u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u547d\u4ee4 ! \u4ea4\u4e92\u5f0f\u529f\u80fd\u76ee\u524d\u672a\u5b9e\u88c5 \u5185\u5d4c\u4ee3\u7801: (\u9002\u5408\u5728python\u811a\u672c\u4e2d\u914d\u5408\u4f7f\u7528) _ = server('cd home/sh/Desktop/Research') stdout, stderr = server('tail -n 50 __cache__/log.yaml') print(stdout[-10:0]) _ = server('rm -r __cache__')","title":"\u8fdc\u7a0b\u6267\u884c\u547d\u4ee4"},{"location":"tutorial_server/#_4","text":"(\u57fa\u4e8esftp\u548cnohup\u540e\u53f0\u6267\u884c/\u91cd\u5b9a\u5411)","title":"\u5c06\u4ee3\u7801\u90e8\u7f72\u81f3\u670d\u52a1\u5668"},{"location":"tutorial_server/#_5","text":"\u770b\u4e00\u4e0b\u6240\u6709\u4f9d\u8d56(pip/conda\u5b89\u88c5\u7684\u5305\u4e0d\u7b97)\u662f\u4e0d\u662f\u90fd\u5728\u76ee\u6807\u76ee\u5f55\u5185(\u7b49\u4e0b\u6253\u7b97\u90e8\u7f72\u7684\u6587\u4ef6\u5939). \u76ee\u6807\u76ee\u5f55\u5185\u662f\u5426\u6709\u8d85\u5927\u6587\u4ef6. \u5176\u5b9e\u5982\u679c\u5fc5\u8981\u7684\u8bdd, \u8d85\u5927\u6587\u4ef6\u4e5f\u662f\u53ef\u4ee5\u4e00\u8d77\u4e0a\u4f20\u7684, \u4eb2\u6d4b2GB\u6587\u4ef6\u6821\u56ed\u7f51vpn\u6761\u4ef6\u4e0b\u6ca1\u6709\u95ee\u9898.","title":"\u68c0\u67e5\u4f60\u7684\u4ee3\u7801"},{"location":"tutorial_server/#_6","text":"\u5c06\u6240\u6709\u6e90\u7801\u90fd\u653e\u7f6e\u5728\u76ee\u6807\u76ee\u5f55, \u6307\u5b9a\u76ee\u6807\u76ee\u5f55\u548c\u542f\u52a8python\u811a\u672c, \u4ee3\u7801\u4f1a\u81ea\u52a8\u8fd0\u884c: with server: server.deploy(src='test-convlstm-cmpl', run='run.py', conda_env='dl') \"\u5e26\u4e0a\u6700\u4f4e\u9650\u5ea6\u7684\u751f\u6d3b\u7528\u54c1, \u51c6\u5907\u63a5\u53d7\u6c38\u65e0\u6b62\u5883\u7684\u52b3\u52a8\u6539\u9020. \"","title":"\u63a8\u9001\u81f3\u670d\u52a1\u5668"},{"location":"tutorial_server/#_7","text":"\u5982\u679c\u4f60\u7684\u811a\u672c\u652f\u6301\u4e2d\u65ad/\u91cd\u542f, \u6216\u8005\u4f60\u4f7f\u7528\u7684\u662flabvision\u7684\u81ea\u52a8\u6838, \u90a3\u4e48labvision\u8fd8\u53ef\u4ee5\u751f\u6210\u534f\u7a0b\u4ee5\u5168\u5929\u5019\u76d1\u63a7\u670d\u52a1\u5668, \u5728\u8d44\u6e90\u7a7a\u95f2\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u8bad\u7ec3. \u8be6\u60c5\u8bf7\u79fb\u6b65: labvision.server.spring_mode","title":"\u81ea\u52a8\u91cd\u542f\u8bad\u7ec3(\u672a\u5b9e\u88c5)"},{"location":"tutorial_server/#_8","text":"\u6240\u6709\u7684\u8fd0\u884c\u7ed3\u679c\u53ca\u7cfb\u7edf\u65e5\u5fd7\u90fd\u4f1a\u4fdd\u5b58\u5728\u4f60\u7684\u76ee\u6807\u6587\u4ef6\u5939\u4e0b (\"target_dir/my-project/xxx.log\"), \u901a\u5e38\u5730, \u6211\u4eec\u63a8\u8350\u76f4\u63a5\u53d6\u56de\u6574\u4e2a\u8fd0\u884c\u5b8c\u6bd5\u7684\u5305: server.pop(project='home/sh/my-project',local_dir='my-packages') \u8fd9\u6837, \u8fd9\u4e2a\u5305\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u88ab\u91cd\u65b0push, \u6216\u8005\u5728\u4f60\u7684\u672c\u673a\u7ee7\u7eed\u8fd0\u884c, \u4efb\u4f55\u65e5\u5fd7\u5386\u53f2\u90fd\u4e0d\u4f1a\u88ab\u4e2d\u65ad. \u5982\u679c\u4f60\u60f3\u8981\u53ea\u83b7\u53d6\u67d0\u4e9b\u6587\u4ef6(\u6bd4\u5982\u8bad\u7ec3\u597d\u7684\u6743\u91cd), server.fetch('home/sh/my-project/best_epoch.pt',local_dir='builds') fetch() \u5c06\u4e0d\u4f1a\u6e05\u7406\u670d\u52a1\u5668\u4e2d\u7684\u5bf9\u5e94\u6587\u4ef6, \u4f60\u4e5f\u53ef\u4ee5\u7528\u6765\u5728\u4e0d\u5220\u9664\u5305\u7684\u524d\u63d0\u4e0b\u53d6\u56de\u5305 \"\u6211\u7ec8\u4e8e\u81ea\u7531\u4e86!\"","title":"\u53d6\u56de\u8fd0\u884c\u7ed3\u679c (\u672a\u5b9e\u88c5)"},{"location":"tutorial_server/#vscode-remote","text":"vscode\u5929\u4e0b\u7b2c\u4e00, \u90a3\u4e48\u8fd9\u4e2a\u5305\u548cvscode-remote\u6709\u4f55\u5f02\u540c?","title":"\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528vscode-remote"},{"location":"tutorial_server/#24","text":"\u5982\u679c\u4f60\u7684\u7f51\u7edc\u5341\u5206\u7a33\u5b9a, \u6216\u8005\u4f60\u53ea\u662f\u5728\u670d\u52a1\u5668\u4e0a\u8c03\u8bd5\u51e0\u5206\u949f\u4ee3\u7801, \u90a3\u4e48\u4f60\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u5305, vscode-remote\u662f\u6700\u597d\u7684\u9009\u62e9. \u4f46\u5982\u679c\u4f60\u7684\u7f51\u7edc\u4e24\u5c0f\u65f6\u5c31\u4f1a\u6302\u6389, \u6216\u8005\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u8dd1\u4e0a\u4e00\u6574\u5929, \u4f7f\u7528labvision.server\u90e8\u7f72\u5c06\u66f4\u4e3a\u65b9\u4fbf. (\u56e0\u4e3alabvision\u5c31\u662f\u4e3a\u8fd9\u79cd\u60c5\u51b5\u51c6\u5907\u7684) labvision.server\u548c\u670d\u52a1\u5668\u7684\u7f51\u7edc\u4ea4\u4e92\u9762\u79ef\u975e\u5e38\u5c0f, \u4ec5\u5728\u5fc5\u8981\u8fde\u63a5\u7684\u65f6\u5019\u901a\u8fc7ssh\u77ed\u6682\u8fde\u63a5, \u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u4f3cvscode\u56e0\u4e3a\u7f51\u7edc\u65ad\u5f00\u800c\u5361\u6b7b\u7684\u60c5\u51b5. \u4e14\u6240\u6709\u90e8\u7f72\u7684\u4ee3\u7801\u90fd\u5728\u540e\u53f0\u6267\u884c, \u8f93\u51fa\u6d41\u88ab\u91cd\u5b9a\u5411\u5230\u65e5\u5fd7\u6587\u4ef6, \u4e0d\u9700\u8981\u7ec8\u7aef\u6301\u7eed\u8fde\u63a5, \u4f60\u53ef\u4ee5\u90e8\u7f72\u5b8c\u5c31\u76d6\u4e0a\u7535\u8111\u8d70\u4eba.","title":"\u7f51\u7edc\u5de8\u7a33/24\u5c0f\u65f6\u6821\u56ed\u7f51\u5728\u7ebf"},{"location":"tutorial_server/#gpu","text":"\u5982\u679c\u4f60\u7684\u672c\u673a\u6ca1\u6709gpu, \u53c8\u78b0\u5de7\u9700\u8981\u8c03\u8bd5, \u90a3\u4e48\u8bf7\u4f7f\u7528vscode-remote, labvision\u5e76\u4e0d\u5177\u5907\u8fdc\u7a0b\u8c03\u8bd5\u7684\u529f\u80fd. \u4e0d\u8fc7\u4f60\u4e5f\u53ef\u4ee5\u5148\u7528cpu\u8c03\u8bd5, \u6539\u6210gpu\u6a21\u5f0f\u540e\u518d\u90e8\u7f72, \u901a\u5e38\u4e0d\u4f1a\u6709\u592a\u591abug.","title":"\u6211\u6ca1\u6709gpu"}]}